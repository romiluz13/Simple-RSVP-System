# AI Developer's Launch Pad: RSVP System Rules

## Template Purpose
This RSVP system is designed to be:
- 🎯 Easy to customize for any event
- 🔐 Secure and reliable
- 📊 Feature-rich with admin panel
- ⚡ Fast and responsive
- 🎨 Beautiful UI with Tailwind CSS
- 📱 Mobile-first design
- 📧 Complete email integration

## Development Rules

### 1. File Structure
```
src/
├── app/                    # Next.js App Router
│   ├── page.tsx           # Landing/RSVP page
│   ├── admin/             # Admin panel routes
│   └── api/               # API endpoints
├── components/            # Reusable components
├── lib/                   # Utilities & business logic
└── styles/               # Global styles
```

### 2. Naming Conventions
- Components: PascalCase (EventCard.tsx)
- Utils: camelCase (formatDate.ts)
- API Routes: kebab-case
- Styles: camelCase.module.css
- Types: PascalCase.types.ts

### 3. Component Rules
- Use 'use client' for interactive components
- Place types/interfaces at the top
- Follow import order: React > Next.js > External > Internal
- Use Tailwind classes with cn utility
- Implement proper loading states
- Handle errors gracefully

### 4. Color Scheme
```css
Primary: amber-500
Secondary: gray-900
Accent: yellow-600
Text: white
Error: red-500
Success: green-500
```

### 5. Admin Panel Features
- Dashboard with RSVP statistics
- Guest list management
- Email notification controls
- Settings configuration
- Secure authentication
- Rate limiting
- Input validation

### 6. Email Integration
- Confirmation emails
- Reminder emails
- Calendar integration (ICS & Google)
- Mobile-responsive templates
- Error handling
- Rate limiting
- Attachment support

### 7. Form Validation
Required Fields:
- Full Name
- Email
- Guest Count (if attending)
- RSVP Status

Validation Rules:
- Email format
- Positive guest count
- Maximum guest limit
- Required fields
- Spam prevention

### 8. Security Requirements
- CSRF Protection
- Rate Limiting
- Secure Headers
- XSS Prevention
- Input Sanitization
- Environment Variables
- Secure Sessions

### 9. Calendar Integration
Required Data:
- Event Date (formatted)
- Event Time (with timezone)
- Venue Details
- Guest Count
- Event Description

Formats:
- Google Calendar URL
- ICS File Download

### 10. Environment Variables - never delete if they are populated by the user !
Required:
```env
MONGODB_URI=
SENDGRID_API_KEY=
FROM_EMAIL=
NOTIFICATION_EMAIL=
NEXT_PUBLIC_EVENT_DATE=
NEXT_PUBLIC_EVENT_TIME=
NEXT_PUBLIC_VENUE_NAME=
NEXT_PUBLIC_VENUE_ADDRESS=
ADMIN_USERNAME=
ADMIN_PASSWORD=
ADMIN_EMAIL=
```

### 11. Testing Requirements
- Unit tests for utilities
- Component testing
- API route testing
- E2E testing
- 80% coverage minimum

### 12. Documentation
Required Sections:
- Setup Guide
- Environment Variables
- Admin Panel Usage
- Customization Options
- Security Features
- Email Features

### 13. Mobile Responsiveness
- Mobile-first approach
- Responsive images
- Touch-friendly inputs
- Readable text sizes
- Proper spacing
- Tested on multiple devices

### 14. Performance
- Image optimization
- Code splitting
- Lazy loading
- Caching strategies
- API response times
- Database indexing

### 15. Error Handling
- User-friendly messages
- Proper error logging
- Recovery options
- Fallback UI
- Network errors
- Database errors

### 16. Accessibility
- ARIA labels
- Keyboard navigation
- Color contrast
- Screen reader support
- Focus management
- Alt text for images

## Critical Rules
1. NEVER expose admin credentials
2. ALWAYS validate user input
3. NEVER store sensitive data client-side
4. ALWAYS handle loading states
5. NEVER skip error handling
6. ALWAYS use TypeScript
7. NEVER commit .env files
8. ALWAYS follow security best practices

## Before Publishing
1. Test all features
2. Verify email templates
3. Check admin panel security
4. Update documentation
5. Verify environment variables
6. Test on multiple devices
7. Run security checks
8. Validate accessibility

## Customization Guide
1. Update event details in .env
2. Modify email templates
3. Customize theme colors
4. Add/modify features
5. Update admin settings
6. Configure notifications

Remember: This is a production-ready system. Maintain high standards for code quality, security, and user experience.